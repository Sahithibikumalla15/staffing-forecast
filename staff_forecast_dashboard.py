# -*- coding: utf-8 -*-
"""staff_forecast_dashboard.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Jk-ZTk-LRAJ1qmH8Q8J17BSvxXIv1epb
"""

import streamlit as st
import pandas as pd
import numpy as np
import os
import glob
import plotly.express as px

# Set title
st.title("üìä Childcare Staffing Forecast Dashboard")

# Load forecast files
forecast_files = glob.glob('forecast_next_week_*.csv')

if not forecast_files:
    st.warning("No forecast files found in this directory.")
    st.stop()

# Combine forecasts
all_data = []
for file in forecast_files:
    room = os.path.basename(file).replace('forecast_next_week_', '').replace('.csv', '').replace('_', ' ')
    df = pd.read_csv(file, parse_dates=['ds'])
    df['Room'] = room
    all_data.append(df)

df = pd.concat(all_data).sort_values('ds')

# Sidebar filters
rooms = sorted(df['Room'].unique())
selected_room = st.sidebar.selectbox("Select Room", options=['All Rooms'] + rooms)

# Filter data
if selected_room != 'All Rooms':
    filtered_df = df[df['Room'] == selected_room]
else:
    filtered_df = df.copy()

# Line chart: Student count forecast
st.subheader(f"üìà Forecasted Student Count ({selected_room})")
fig_students = px.line(
    filtered_df,
    x='ds',
    y='yhat',
    color='Room' if selected_room == 'All Rooms' else None,
    labels={'ds': 'Date & Time', 'yhat': 'Student Count'},
    title='Student Forecast (30-min intervals)'
)
st.plotly_chart(fig_students, use_container_width=True)

# Line chart: Staff needed
st.subheader("üßë‚Äçüè´ Estimated Staff Required")
if 'EstimatedStaff' in filtered_df.columns:
    if selected_room == 'All Rooms':
        total_staff = filtered_df.groupby('ds')['EstimatedStaff'].sum().reset_index()
        fig_staff = px.line(
            total_staff,
            x='ds',
            y='EstimatedStaff',
            labels={'ds': 'Date & Time', 'EstimatedStaff': 'Total Staff'},
            title='Total Staff Required Across All Rooms'
        )
    else:
        fig_staff = px.line(
            filtered_df,
            x='ds',
            y='EstimatedStaff',
            labels={'ds': 'Date & Time', 'EstimatedStaff': 'Staff Count'},
            title=f"Staff Needed for {selected_room}"
        )
    st.plotly_chart(fig_staff, use_container_width=True)
else:
    st.info("No EstimatedStaff column found in the uploaded forecast files.")